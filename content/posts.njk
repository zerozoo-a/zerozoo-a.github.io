---
layout: layouts/home.njk
eleventyNavigation:
  key: Posts
  order: 2
pagination:
  data: collections.myCustomSort
  size: 5
permalink: posts/{% if pagination.pageNumber > 0 %}page{{ pagination.pageNumber }}/{% endif %}index.html

---
{% set postsCount = collections.posts | length %}
{% set latestPostsCount = postsCount | min(numberOfLatestPostsToShow) %}
{% set postslist = collections.posts | head(-1 * numberOfLatestPostsToShow) %}
{% set postslistCounter = postsCount %}
{% set pageNumber = pagination.pageNumber %}
<div>
  <ol class="postlist" style="counter-reset: start-from {{ postslistCounter + 1 - (pagination.pageNumber * 5) }}" >
    {% for item in pagination.items %}
      <li class="postlist-item postlist-item-active">
          <a href="{{ item.page.url }}" class="postlist-link">{% if item.data.title %}{{ item.data.title }}{% else %}<code>{{ item.url }}</code>{% endif %}</a>
          <time class="postlist-date" datetime="{{ item.date | htmlDateString }}">Created at: {{ item.page.date | readableDate("yyyy년 LL월 dd일 hh시 mm분 ss초") }}</time>
      </li>
    {% endfor %}
    </ol>
</div>
<div class="space"></div>
<div class="wrapper">
  <ul id="pagination"></ul>
</div>

{% set _pagination =  pagination.links | dump %}
{% set paginationLinks = pagination.links %}

<script type="text/javascript">
  const pageLinks = `{{_pagination}}`.replaceAll('&quot;','').replaceAll('[','').replaceAll(']','').split(',')
  const postsCount = {{postsCount}}
  let allPages = pageLinks.length
  const pagination = document.getElementById("pagination")
  const NOTHING_BUTTON = (dir='<')=>`<li class="btn">${dir}</li>`

  function elem(allPages = pageLinks.length, page) {
    let li = "";
    let beforePages = page - 1;
    let afterPages = page + 1;
    let liActive;


  if (page > 0) {
    li += `<li class="btn" onclick="elem(allPages, ${
      page - 1
    })" > < </li>`;
  } else {
    li += NOTHING_BUTTON('_')
  }

  for (let currentPage = beforePages; currentPage <= afterPages; currentPage++) {

    if (currentPage > allPages ) {
      continue;
    }

    if (currentPage == -1) {
      currentPage = currentPage + 1;
    }

    if (page == currentPage) {
      liActive = "active";
    } else {
      liActive = "";
    }

    /**
    * 마지막 페이지의 pagination
    */
    if(page == allPages - 1) {
    li += `
      <a href="${pageLinks[currentPage]}">
      <li class="numb active" onclick="elem(allPages, ${currentPage})" ><span>
      ${afterPages}
      </span></li>
      </a>
      `;
      break;
    }
    /**
     * 첫 페이지의 pagination
     */
    
    li += `
      <a href="${pageLinks[currentPage]}">
      <li class="numb ${liActive}" onclick="elem(allPages, ${currentPage})" ><span>
      ${currentPage + 1}
      </span></li>
      </a>
      `;
  }

  if(page == 0) {
    li += `
      <a href="${pageLinks[afterPages + 1]}">
      <li class="numb" onclick="elem(allPages, ${afterPages + 1})" ><span>
        ${afterPages + 2}
      </span></li>
      </a>
      `;
  }

  if (page < allPages && page !== allPages - 1) {
    li += `<li class="btn" onclick="elem(allPages, ${
      page + 1
    })" > > </li>`;
  } else {
    li += NOTHING_BUTTON('_')
  }

  pagination.innerHTML = li;
}
elem(allPages, {{pageNumber}});
</script>